//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LegalPubClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="documentfile", Namespace="http://schemas.datacontract.org/2004/07/PublicationService")]
    [System.SerializableAttribute()]
    public partial class documentfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/PublicationService")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNoValidateDocument", ReplyAction="http://tempuri.org/IService1/GetNoValidateDocumentResponse")]
        LegalPubClient.ServiceReference1.documentfile[] GetNoValidateDocument();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetNoValidateDocument", ReplyAction="http://tempuri.org/IService1/GetNoValidateDocumentResponse")]
        System.IAsyncResult BeginGetNoValidateDocument(System.AsyncCallback callback, object asyncState);
        
        LegalPubClient.ServiceReference1.documentfile[] EndGetNoValidateDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SubmitDocument", ReplyAction="http://tempuri.org/IService1/SubmitDocumentResponse")]
        bool SubmitDocument(string filename);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SubmitDocument", ReplyAction="http://tempuri.org/IService1/SubmitDocumentResponse")]
        System.IAsyncResult BeginSubmitDocument(string filename, System.AsyncCallback callback, object asyncState);
        
        bool EndSubmitDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteDocument", ReplyAction="http://tempuri.org/IService1/DeleteDocumentResponse")]
        bool DeleteDocument(int documentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteDocument", ReplyAction="http://tempuri.org/IService1/DeleteDocumentResponse")]
        System.IAsyncResult BeginDeleteDocument(int documentid, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PreValidateDocument", ReplyAction="http://tempuri.org/IService1/PreValidateDocumentResponse")]
        bool PreValidateDocument(int documentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/PreValidateDocument", ReplyAction="http://tempuri.org/IService1/PreValidateDocumentResponse")]
        System.IAsyncResult BeginPreValidateDocument(int documentid, System.AsyncCallback callback, object asyncState);
        
        bool EndPreValidateDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateDocument", ReplyAction="http://tempuri.org/IService1/ValidateDocumentResponse")]
        bool ValidateDocument(int documentid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ValidateDocument", ReplyAction="http://tempuri.org/IService1/ValidateDocumentResponse")]
        System.IAsyncResult BeginValidateDocument(int documentid, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateDocument", ReplyAction="http://tempuri.org/IService1/UpdateDocumentResponse")]
        bool UpdateDocument(int documentid, string documentname);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateDocument", ReplyAction="http://tempuri.org/IService1/UpdateDocumentResponse")]
        System.IAsyncResult BeginUpdateDocument(int documentid, string documentname, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPreValidateDocument", ReplyAction="http://tempuri.org/IService1/GetPreValidateDocumentResponse")]
        LegalPubClient.ServiceReference1.documentfile[] GetPreValidateDocument();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPreValidateDocument", ReplyAction="http://tempuri.org/IService1/GetPreValidateDocumentResponse")]
        System.IAsyncResult BeginGetPreValidateDocument(System.AsyncCallback callback, object asyncState);
        
        LegalPubClient.ServiceReference1.documentfile[] EndGetPreValidateDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetValidatedDocument", ReplyAction="http://tempuri.org/IService1/GetValidatedDocumentResponse")]
        LegalPubClient.ServiceReference1.documentfile[] GetValidatedDocument();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetValidatedDocument", ReplyAction="http://tempuri.org/IService1/GetValidatedDocumentResponse")]
        System.IAsyncResult BeginGetValidatedDocument(System.AsyncCallback callback, object asyncState);
        
        LegalPubClient.ServiceReference1.documentfile[] EndGetValidatedDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        LegalPubClient.ServiceReference1.user[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        LegalPubClient.ServiceReference1.user[] EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        bool AddUser(string username, string password, string role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.IAsyncResult BeginAddUser(string username, string password, string role, System.AsyncCallback callback, object asyncState);
        
        bool EndAddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        bool UpdateUser(int userid, string password, string role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.IAsyncResult BeginUpdateUser(int userid, string password, string role, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        bool DeleteUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LegalPubClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNoValidateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNoValidateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LegalPubClient.ServiceReference1.documentfile[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LegalPubClient.ServiceReference1.documentfile[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreValidateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PreValidateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPreValidateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPreValidateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LegalPubClient.ServiceReference1.documentfile[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LegalPubClient.ServiceReference1.documentfile[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetValidatedDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetValidatedDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LegalPubClient.ServiceReference1.documentfile[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LegalPubClient.ServiceReference1.documentfile[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LegalPubClient.ServiceReference1.user[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LegalPubClient.ServiceReference1.user[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LegalPubClient.ServiceReference1.IService1>, LegalPubClient.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetNoValidateDocumentDelegate;
        
        private EndOperationDelegate onEndGetNoValidateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onGetNoValidateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitDocumentDelegate;
        
        private EndOperationDelegate onEndSubmitDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDocumentDelegate;
        
        private EndOperationDelegate onEndDeleteDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginPreValidateDocumentDelegate;
        
        private EndOperationDelegate onEndPreValidateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onPreValidateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateDocumentDelegate;
        
        private EndOperationDelegate onEndValidateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onValidateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDocumentDelegate;
        
        private EndOperationDelegate onEndUpdateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPreValidateDocumentDelegate;
        
        private EndOperationDelegate onEndGetPreValidateDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onGetPreValidateDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetValidatedDocumentDelegate;
        
        private EndOperationDelegate onEndGetValidatedDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onGetValidatedDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddUserDelegate;
        
        private EndOperationDelegate onEndAddUserDelegate;
        
        private System.Threading.SendOrPostCallback onAddUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserDelegate;
        
        private EndOperationDelegate onEndUpdateUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetNoValidateDocumentCompletedEventArgs> GetNoValidateDocumentCompleted;
        
        public event System.EventHandler<SubmitDocumentCompletedEventArgs> SubmitDocumentCompleted;
        
        public event System.EventHandler<DeleteDocumentCompletedEventArgs> DeleteDocumentCompleted;
        
        public event System.EventHandler<PreValidateDocumentCompletedEventArgs> PreValidateDocumentCompleted;
        
        public event System.EventHandler<ValidateDocumentCompletedEventArgs> ValidateDocumentCompleted;
        
        public event System.EventHandler<UpdateDocumentCompletedEventArgs> UpdateDocumentCompleted;
        
        public event System.EventHandler<GetPreValidateDocumentCompletedEventArgs> GetPreValidateDocumentCompleted;
        
        public event System.EventHandler<GetValidatedDocumentCompletedEventArgs> GetValidatedDocumentCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<AddUserCompletedEventArgs> AddUserCompleted;
        
        public event System.EventHandler<UpdateUserCompletedEventArgs> UpdateUserCompleted;
        
        public event System.EventHandler<DeleteUserCompletedEventArgs> DeleteUserCompleted;
        
        public LegalPubClient.ServiceReference1.documentfile[] GetNoValidateDocument() {
            return base.Channel.GetNoValidateDocument();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNoValidateDocument(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNoValidateDocument(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LegalPubClient.ServiceReference1.documentfile[] EndGetNoValidateDocument(System.IAsyncResult result) {
            return base.Channel.EndGetNoValidateDocument(result);
        }
        
        private System.IAsyncResult OnBeginGetNoValidateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNoValidateDocument(callback, asyncState);
        }
        
        private object[] OnEndGetNoValidateDocument(System.IAsyncResult result) {
            LegalPubClient.ServiceReference1.documentfile[] retVal = this.EndGetNoValidateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNoValidateDocumentCompleted(object state) {
            if ((this.GetNoValidateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNoValidateDocumentCompleted(this, new GetNoValidateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNoValidateDocumentAsync() {
            this.GetNoValidateDocumentAsync(null);
        }
        
        public void GetNoValidateDocumentAsync(object userState) {
            if ((this.onBeginGetNoValidateDocumentDelegate == null)) {
                this.onBeginGetNoValidateDocumentDelegate = new BeginOperationDelegate(this.OnBeginGetNoValidateDocument);
            }
            if ((this.onEndGetNoValidateDocumentDelegate == null)) {
                this.onEndGetNoValidateDocumentDelegate = new EndOperationDelegate(this.OnEndGetNoValidateDocument);
            }
            if ((this.onGetNoValidateDocumentCompletedDelegate == null)) {
                this.onGetNoValidateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNoValidateDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginGetNoValidateDocumentDelegate, null, this.onEndGetNoValidateDocumentDelegate, this.onGetNoValidateDocumentCompletedDelegate, userState);
        }
        
        public bool SubmitDocument(string filename) {
            return base.Channel.SubmitDocument(filename);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitDocument(string filename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitDocument(filename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSubmitDocument(System.IAsyncResult result) {
            return base.Channel.EndSubmitDocument(result);
        }
        
        private System.IAsyncResult OnBeginSubmitDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            return this.BeginSubmitDocument(filename, callback, asyncState);
        }
        
        private object[] OnEndSubmitDocument(System.IAsyncResult result) {
            bool retVal = this.EndSubmitDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitDocumentCompleted(object state) {
            if ((this.SubmitDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitDocumentCompleted(this, new SubmitDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitDocumentAsync(string filename) {
            this.SubmitDocumentAsync(filename, null);
        }
        
        public void SubmitDocumentAsync(string filename, object userState) {
            if ((this.onBeginSubmitDocumentDelegate == null)) {
                this.onBeginSubmitDocumentDelegate = new BeginOperationDelegate(this.OnBeginSubmitDocument);
            }
            if ((this.onEndSubmitDocumentDelegate == null)) {
                this.onEndSubmitDocumentDelegate = new EndOperationDelegate(this.OnEndSubmitDocument);
            }
            if ((this.onSubmitDocumentCompletedDelegate == null)) {
                this.onSubmitDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitDocumentDelegate, new object[] {
                        filename}, this.onEndSubmitDocumentDelegate, this.onSubmitDocumentCompletedDelegate, userState);
        }
        
        public bool DeleteDocument(int documentid) {
            return base.Channel.DeleteDocument(documentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDocument(int documentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDocument(documentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteDocument(System.IAsyncResult result) {
            return base.Channel.EndDeleteDocument(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int documentid = ((int)(inValues[0]));
            return this.BeginDeleteDocument(documentid, callback, asyncState);
        }
        
        private object[] OnEndDeleteDocument(System.IAsyncResult result) {
            bool retVal = this.EndDeleteDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDocumentCompleted(object state) {
            if ((this.DeleteDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDocumentAsync(int documentid) {
            this.DeleteDocumentAsync(documentid, null);
        }
        
        public void DeleteDocumentAsync(int documentid, object userState) {
            if ((this.onBeginDeleteDocumentDelegate == null)) {
                this.onBeginDeleteDocumentDelegate = new BeginOperationDelegate(this.OnBeginDeleteDocument);
            }
            if ((this.onEndDeleteDocumentDelegate == null)) {
                this.onEndDeleteDocumentDelegate = new EndOperationDelegate(this.OnEndDeleteDocument);
            }
            if ((this.onDeleteDocumentCompletedDelegate == null)) {
                this.onDeleteDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDocumentDelegate, new object[] {
                        documentid}, this.onEndDeleteDocumentDelegate, this.onDeleteDocumentCompletedDelegate, userState);
        }
        
        public bool PreValidateDocument(int documentid) {
            return base.Channel.PreValidateDocument(documentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPreValidateDocument(int documentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPreValidateDocument(documentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndPreValidateDocument(System.IAsyncResult result) {
            return base.Channel.EndPreValidateDocument(result);
        }
        
        private System.IAsyncResult OnBeginPreValidateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int documentid = ((int)(inValues[0]));
            return this.BeginPreValidateDocument(documentid, callback, asyncState);
        }
        
        private object[] OnEndPreValidateDocument(System.IAsyncResult result) {
            bool retVal = this.EndPreValidateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPreValidateDocumentCompleted(object state) {
            if ((this.PreValidateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PreValidateDocumentCompleted(this, new PreValidateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PreValidateDocumentAsync(int documentid) {
            this.PreValidateDocumentAsync(documentid, null);
        }
        
        public void PreValidateDocumentAsync(int documentid, object userState) {
            if ((this.onBeginPreValidateDocumentDelegate == null)) {
                this.onBeginPreValidateDocumentDelegate = new BeginOperationDelegate(this.OnBeginPreValidateDocument);
            }
            if ((this.onEndPreValidateDocumentDelegate == null)) {
                this.onEndPreValidateDocumentDelegate = new EndOperationDelegate(this.OnEndPreValidateDocument);
            }
            if ((this.onPreValidateDocumentCompletedDelegate == null)) {
                this.onPreValidateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPreValidateDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginPreValidateDocumentDelegate, new object[] {
                        documentid}, this.onEndPreValidateDocumentDelegate, this.onPreValidateDocumentCompletedDelegate, userState);
        }
        
        public bool ValidateDocument(int documentid) {
            return base.Channel.ValidateDocument(documentid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateDocument(int documentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateDocument(documentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndValidateDocument(System.IAsyncResult result) {
            return base.Channel.EndValidateDocument(result);
        }
        
        private System.IAsyncResult OnBeginValidateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int documentid = ((int)(inValues[0]));
            return this.BeginValidateDocument(documentid, callback, asyncState);
        }
        
        private object[] OnEndValidateDocument(System.IAsyncResult result) {
            bool retVal = this.EndValidateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateDocumentCompleted(object state) {
            if ((this.ValidateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateDocumentCompleted(this, new ValidateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateDocumentAsync(int documentid) {
            this.ValidateDocumentAsync(documentid, null);
        }
        
        public void ValidateDocumentAsync(int documentid, object userState) {
            if ((this.onBeginValidateDocumentDelegate == null)) {
                this.onBeginValidateDocumentDelegate = new BeginOperationDelegate(this.OnBeginValidateDocument);
            }
            if ((this.onEndValidateDocumentDelegate == null)) {
                this.onEndValidateDocumentDelegate = new EndOperationDelegate(this.OnEndValidateDocument);
            }
            if ((this.onValidateDocumentCompletedDelegate == null)) {
                this.onValidateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginValidateDocumentDelegate, new object[] {
                        documentid}, this.onEndValidateDocumentDelegate, this.onValidateDocumentCompletedDelegate, userState);
        }
        
        public bool UpdateDocument(int documentid, string documentname) {
            return base.Channel.UpdateDocument(documentid, documentname);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDocument(int documentid, string documentname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDocument(documentid, documentname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateDocument(System.IAsyncResult result) {
            return base.Channel.EndUpdateDocument(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int documentid = ((int)(inValues[0]));
            string documentname = ((string)(inValues[1]));
            return this.BeginUpdateDocument(documentid, documentname, callback, asyncState);
        }
        
        private object[] OnEndUpdateDocument(System.IAsyncResult result) {
            bool retVal = this.EndUpdateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDocumentCompleted(object state) {
            if ((this.UpdateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDocumentCompleted(this, new UpdateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDocumentAsync(int documentid, string documentname) {
            this.UpdateDocumentAsync(documentid, documentname, null);
        }
        
        public void UpdateDocumentAsync(int documentid, string documentname, object userState) {
            if ((this.onBeginUpdateDocumentDelegate == null)) {
                this.onBeginUpdateDocumentDelegate = new BeginOperationDelegate(this.OnBeginUpdateDocument);
            }
            if ((this.onEndUpdateDocumentDelegate == null)) {
                this.onEndUpdateDocumentDelegate = new EndOperationDelegate(this.OnEndUpdateDocument);
            }
            if ((this.onUpdateDocumentCompletedDelegate == null)) {
                this.onUpdateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDocumentDelegate, new object[] {
                        documentid,
                        documentname}, this.onEndUpdateDocumentDelegate, this.onUpdateDocumentCompletedDelegate, userState);
        }
        
        public LegalPubClient.ServiceReference1.documentfile[] GetPreValidateDocument() {
            return base.Channel.GetPreValidateDocument();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPreValidateDocument(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPreValidateDocument(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LegalPubClient.ServiceReference1.documentfile[] EndGetPreValidateDocument(System.IAsyncResult result) {
            return base.Channel.EndGetPreValidateDocument(result);
        }
        
        private System.IAsyncResult OnBeginGetPreValidateDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPreValidateDocument(callback, asyncState);
        }
        
        private object[] OnEndGetPreValidateDocument(System.IAsyncResult result) {
            LegalPubClient.ServiceReference1.documentfile[] retVal = this.EndGetPreValidateDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPreValidateDocumentCompleted(object state) {
            if ((this.GetPreValidateDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPreValidateDocumentCompleted(this, new GetPreValidateDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPreValidateDocumentAsync() {
            this.GetPreValidateDocumentAsync(null);
        }
        
        public void GetPreValidateDocumentAsync(object userState) {
            if ((this.onBeginGetPreValidateDocumentDelegate == null)) {
                this.onBeginGetPreValidateDocumentDelegate = new BeginOperationDelegate(this.OnBeginGetPreValidateDocument);
            }
            if ((this.onEndGetPreValidateDocumentDelegate == null)) {
                this.onEndGetPreValidateDocumentDelegate = new EndOperationDelegate(this.OnEndGetPreValidateDocument);
            }
            if ((this.onGetPreValidateDocumentCompletedDelegate == null)) {
                this.onGetPreValidateDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPreValidateDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginGetPreValidateDocumentDelegate, null, this.onEndGetPreValidateDocumentDelegate, this.onGetPreValidateDocumentCompletedDelegate, userState);
        }
        
        public LegalPubClient.ServiceReference1.documentfile[] GetValidatedDocument() {
            return base.Channel.GetValidatedDocument();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetValidatedDocument(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetValidatedDocument(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LegalPubClient.ServiceReference1.documentfile[] EndGetValidatedDocument(System.IAsyncResult result) {
            return base.Channel.EndGetValidatedDocument(result);
        }
        
        private System.IAsyncResult OnBeginGetValidatedDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetValidatedDocument(callback, asyncState);
        }
        
        private object[] OnEndGetValidatedDocument(System.IAsyncResult result) {
            LegalPubClient.ServiceReference1.documentfile[] retVal = this.EndGetValidatedDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetValidatedDocumentCompleted(object state) {
            if ((this.GetValidatedDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetValidatedDocumentCompleted(this, new GetValidatedDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetValidatedDocumentAsync() {
            this.GetValidatedDocumentAsync(null);
        }
        
        public void GetValidatedDocumentAsync(object userState) {
            if ((this.onBeginGetValidatedDocumentDelegate == null)) {
                this.onBeginGetValidatedDocumentDelegate = new BeginOperationDelegate(this.OnBeginGetValidatedDocument);
            }
            if ((this.onEndGetValidatedDocumentDelegate == null)) {
                this.onEndGetValidatedDocumentDelegate = new EndOperationDelegate(this.OnEndGetValidatedDocument);
            }
            if ((this.onGetValidatedDocumentCompletedDelegate == null)) {
                this.onGetValidatedDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetValidatedDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginGetValidatedDocumentDelegate, null, this.onEndGetValidatedDocumentDelegate, this.onGetValidatedDocumentCompletedDelegate, userState);
        }
        
        public LegalPubClient.ServiceReference1.user[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LegalPubClient.ServiceReference1.user[] EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            LegalPubClient.ServiceReference1.user[] retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        public bool AddUser(string username, string password, string role) {
            return base.Channel.AddUser(username, password, role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddUser(string username, string password, string role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddUser(username, password, role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddUser(System.IAsyncResult result) {
            return base.Channel.EndAddUser(result);
        }
        
        private System.IAsyncResult OnBeginAddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string role = ((string)(inValues[2]));
            return this.BeginAddUser(username, password, role, callback, asyncState);
        }
        
        private object[] OnEndAddUser(System.IAsyncResult result) {
            bool retVal = this.EndAddUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddUserCompleted(object state) {
            if ((this.AddUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddUserAsync(string username, string password, string role) {
            this.AddUserAsync(username, password, role, null);
        }
        
        public void AddUserAsync(string username, string password, string role, object userState) {
            if ((this.onBeginAddUserDelegate == null)) {
                this.onBeginAddUserDelegate = new BeginOperationDelegate(this.OnBeginAddUser);
            }
            if ((this.onEndAddUserDelegate == null)) {
                this.onEndAddUserDelegate = new EndOperationDelegate(this.OnEndAddUser);
            }
            if ((this.onAddUserCompletedDelegate == null)) {
                this.onAddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddUserCompleted);
            }
            base.InvokeAsync(this.onBeginAddUserDelegate, new object[] {
                        username,
                        password,
                        role}, this.onEndAddUserDelegate, this.onAddUserCompletedDelegate, userState);
        }
        
        public bool UpdateUser(int userid, string password, string role) {
            return base.Channel.UpdateUser(userid, password, role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateUser(int userid, string password, string role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUser(userid, password, role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateUser(System.IAsyncResult result) {
            return base.Channel.EndUpdateUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userid = ((int)(inValues[0]));
            string password = ((string)(inValues[1]));
            string role = ((string)(inValues[2]));
            return this.BeginUpdateUser(userid, password, role, callback, asyncState);
        }
        
        private object[] OnEndUpdateUser(System.IAsyncResult result) {
            bool retVal = this.EndUpdateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserCompleted(object state) {
            if ((this.UpdateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserAsync(int userid, string password, string role) {
            this.UpdateUserAsync(userid, password, role, null);
        }
        
        public void UpdateUserAsync(int userid, string password, string role, object userState) {
            if ((this.onBeginUpdateUserDelegate == null)) {
                this.onBeginUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateUser);
            }
            if ((this.onEndUpdateUserDelegate == null)) {
                this.onEndUpdateUserDelegate = new EndOperationDelegate(this.OnEndUpdateUser);
            }
            if ((this.onUpdateUserCompletedDelegate == null)) {
                this.onUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserDelegate, new object[] {
                        userid,
                        password,
                        role}, this.onEndUpdateUserDelegate, this.onUpdateUserCompletedDelegate, userState);
        }
        
        public bool DeleteUser(int userid) {
            return base.Channel.DeleteUser(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userid = ((int)(inValues[0]));
            return this.BeginDeleteUser(userid, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            bool retVal = this.EndDeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(int userid) {
            this.DeleteUserAsync(userid, null);
        }
        
        public void DeleteUserAsync(int userid, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        userid}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
    }
}
